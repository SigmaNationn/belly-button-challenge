<!DOCTYPE html>
<html>
<head>
    <title>Live Earthquake Visualization</title>
    <!-- Include Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <style>
        /* Define CSS styles for the map container */
        #map {
            height: 600px;
            width: 100%;
        }
    </style>
</head>
<body>
    <div id="map"></div>

    <script>
        // Initialize the map
        var map = L.map('map').setView([0, 0], 2);

        // Create base layers for the map
        var satelliteLayer = L.tileLayer('https://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {
            subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],
            maxZoom: 20
        });

        var terrainLayer = L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {
            maxZoom: 17
        });

        // Create a layer group to hold base layers
        var baseLayers = {
            "Satellite": satelliteLayer,
            "Terrain": terrainLayer
        };

        // Add the default satellite layer to the map
        satelliteLayer.addTo(map);

        // Function to update earthquake data
        function updateEarthquakeData() {
            fetch('https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojson')
                .then(function (response) {
                    return response.json();
                })
                .then(function (data) {
                    if (earthquakeLayer) {
                        map.removeLayer(earthquakeLayer);
                    }

                    earthquakeLayer = L.geoJSON(data, {
                        pointToLayer: function (feature, latlng) {
                            return L.circleMarker(latlng, style(feature));
                        },
                        onEachFeature: onEachFeature
                    }).addTo(map);
                });
        }

        // Function to style earthquake markers based on magnitude and depth
        function style(feature) {
            return {
                radius: feature.properties.mag * 5,
                fillColor: 'red',
                color: '#000',
                weight: 1,
                opacity: 1,
                fillOpacity: 0.8
            };
        }

        // Function to display additional earthquake information in popups
        function onEachFeature(feature, layer) {
            layer.bindPopup(
                'Magnitude: ' + feature.properties.mag + '<br>' +
                'Depth: ' + feature.geometry.coordinates[2] + ' km'
            );
        }

        var earthquakeLayer;
        updateEarthquakeData();

        // Periodically update earthquake data (e.g., every 5 minutes)
        setInterval(updateEarthquakeData, 300000); // 300,000 milliseconds = 5 minutes

        // Create a legend
        var legend = L.control({ position: 'bottomright' });
        legend.onAdd = function (map) {
            var div = L.DomUtil.create('div', 'info legend');
            div.innerHTML = 'Your legend HTML here';
            return div;
        };
        legend.addTo(map);

        // Add layer control for changing base layers
        L.control.layers(baseLayers).addTo(map);
    </script>
</body>
</html>

